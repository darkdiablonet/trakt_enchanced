name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '44 0 * * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      push:
        description: 'Whether to push the built image to the registry (true/false).'
        required: false
        default: 'true'
      registry:
        description: 'Registry to use (e.g. ghcr.io or docker.io). Leave empty to use default.'
        required: false
        default: ''
      image_name:
        description: 'Image name (owner/repo). Leave empty to use repository name.'
        required: false
        default: ''

env:
  # coalesce returns the first non-null argument
  REGISTRY: ${{ coalesce(github.event.inputs.registry, 'ghcr.io') }}
  IMAGE_NAME: ${{ coalesce(github.event.inputs.image_name, github.repository) }}
  # Decide if we should push:
  # - Always push on a real push event
  # - For manual runs, push only if input push == 'true' (default)
  SHOULD_PUSH: ${{ (github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && coalesce(github.event.inputs.push, 'true') == 'true') }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except when we won't push/sign
      - name: Install cosign
        if: env.SHOULD_PUSH == 'true'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry only when we plan to push (skip on PR or manual dry-run)
      - name: Log into registry ${{ env.REGISTRY }}
        if: env.SHOULD_PUSH == 'true'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: ${{ env.SHOULD_PUSH == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest only when we pushed (not on PR or dry-run).
      - name: Sign the published Docker image
        if: env.SHOULD_PUSH == 'true'
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
